// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package metric

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockIStatusWriter creates a new instance of MockIStatusWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIStatusWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIStatusWriter {
	mock := &MockIStatusWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockIStatusWriter is an autogenerated mock type for the IStatusWriter type
type MockIStatusWriter struct {
	mock.Mock
}

type MockIStatusWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIStatusWriter) EXPECT() *MockIStatusWriter_Expecter {
	return &MockIStatusWriter_Expecter{mock: &_m.Mock}
}

// Status provides a mock function for the type MockIStatusWriter
func (_mock *MockIStatusWriter) Status() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for Status")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// MockIStatusWriter_Status_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Status'
type MockIStatusWriter_Status_Call struct {
	*mock.Call
}

// Status is a helper method to define mock.On call
func (_e *MockIStatusWriter_Expecter) Status() *MockIStatusWriter_Status_Call {
	return &MockIStatusWriter_Status_Call{Call: _e.mock.On("Status")}
}

func (_c *MockIStatusWriter_Status_Call) Run(run func()) *MockIStatusWriter_Status_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIStatusWriter_Status_Call) Return(s string) *MockIStatusWriter_Status_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *MockIStatusWriter_Status_Call) RunAndReturn(run func() string) *MockIStatusWriter_Status_Call {
	_c.Call.Return(run)
	return _c
}

// WriteHeader provides a mock function for the type MockIStatusWriter
func (_mock *MockIStatusWriter) WriteHeader(code int) {
	_mock.Called(code)
	return
}

// MockIStatusWriter_WriteHeader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteHeader'
type MockIStatusWriter_WriteHeader_Call struct {
	*mock.Call
}

// WriteHeader is a helper method to define mock.On call
//   - code int
func (_e *MockIStatusWriter_Expecter) WriteHeader(code interface{}) *MockIStatusWriter_WriteHeader_Call {
	return &MockIStatusWriter_WriteHeader_Call{Call: _e.mock.On("WriteHeader", code)}
}

func (_c *MockIStatusWriter_WriteHeader_Call) Run(run func(code int)) *MockIStatusWriter_WriteHeader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 int
		if args[0] != nil {
			arg0 = args[0].(int)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockIStatusWriter_WriteHeader_Call) Return() *MockIStatusWriter_WriteHeader_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIStatusWriter_WriteHeader_Call) RunAndReturn(run func(code int)) *MockIStatusWriter_WriteHeader_Call {
	_c.Run(run)
	return _c
}
